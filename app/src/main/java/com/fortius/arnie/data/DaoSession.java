package com.fortius.arnie.data;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.fortius.arnie.data.MuscleGroup;
import com.fortius.arnie.data.Exercise;
import com.fortius.arnie.data.ExerciseMuscleGroupRef;
import com.fortius.arnie.data.WorkoutSession;
import com.fortius.arnie.data.ExerciseSet;

import com.fortius.arnie.data.MuscleGroupDao;
import com.fortius.arnie.data.ExerciseDao;
import com.fortius.arnie.data.ExerciseMuscleGroupRefDao;
import com.fortius.arnie.data.WorkoutSessionDao;
import com.fortius.arnie.data.ExerciseSetDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig muscleGroupDaoConfig;
    private final DaoConfig exerciseDaoConfig;
    private final DaoConfig exerciseMuscleGroupRefDaoConfig;
    private final DaoConfig workoutSessionDaoConfig;
    private final DaoConfig exerciseSetDaoConfig;

    private final MuscleGroupDao muscleGroupDao;
    private final ExerciseDao exerciseDao;
    private final ExerciseMuscleGroupRefDao exerciseMuscleGroupRefDao;
    private final WorkoutSessionDao workoutSessionDao;
    private final ExerciseSetDao exerciseSetDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        muscleGroupDaoConfig = daoConfigMap.get(MuscleGroupDao.class).clone();
        muscleGroupDaoConfig.initIdentityScope(type);

        exerciseDaoConfig = daoConfigMap.get(ExerciseDao.class).clone();
        exerciseDaoConfig.initIdentityScope(type);

        exerciseMuscleGroupRefDaoConfig = daoConfigMap.get(ExerciseMuscleGroupRefDao.class).clone();
        exerciseMuscleGroupRefDaoConfig.initIdentityScope(type);

        workoutSessionDaoConfig = daoConfigMap.get(WorkoutSessionDao.class).clone();
        workoutSessionDaoConfig.initIdentityScope(type);

        exerciseSetDaoConfig = daoConfigMap.get(ExerciseSetDao.class).clone();
        exerciseSetDaoConfig.initIdentityScope(type);

        muscleGroupDao = new MuscleGroupDao(muscleGroupDaoConfig, this);
        exerciseDao = new ExerciseDao(exerciseDaoConfig, this);
        exerciseMuscleGroupRefDao = new ExerciseMuscleGroupRefDao(exerciseMuscleGroupRefDaoConfig, this);
        workoutSessionDao = new WorkoutSessionDao(workoutSessionDaoConfig, this);
        exerciseSetDao = new ExerciseSetDao(exerciseSetDaoConfig, this);

        registerDao(MuscleGroup.class, muscleGroupDao);
        registerDao(Exercise.class, exerciseDao);
        registerDao(ExerciseMuscleGroupRef.class, exerciseMuscleGroupRefDao);
        registerDao(WorkoutSession.class, workoutSessionDao);
        registerDao(ExerciseSet.class, exerciseSetDao);
    }
    
    public void clear() {
        muscleGroupDaoConfig.getIdentityScope().clear();
        exerciseDaoConfig.getIdentityScope().clear();
        exerciseMuscleGroupRefDaoConfig.getIdentityScope().clear();
        workoutSessionDaoConfig.getIdentityScope().clear();
        exerciseSetDaoConfig.getIdentityScope().clear();
    }

    public MuscleGroupDao getMuscleGroupDao() {
        return muscleGroupDao;
    }

    public ExerciseDao getExerciseDao() {
        return exerciseDao;
    }

    public ExerciseMuscleGroupRefDao getExerciseMuscleGroupRefDao() {
        return exerciseMuscleGroupRefDao;
    }

    public WorkoutSessionDao getWorkoutSessionDao() {
        return workoutSessionDao;
    }

    public ExerciseSetDao getExerciseSetDao() {
        return exerciseSetDao;
    }

}
